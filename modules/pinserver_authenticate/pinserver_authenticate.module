<?php
/**
 * Functions and APIs for logging in a user via pinserver
 */

function pinserver_authenticate_menu() {
  $items = array();

  $items['user/pin'] = array(
    'title' => 'Log in via PIN',
    'page callback' => 'pinserver_authenticate_pin_user_login',
    'access callback' => 'pinserver_authenticate_user_login_access',
    'type' => MENU_LOCAL_TASK,
    'file' => 'pinserver_authenticate.pages.inc',
  );

  $items['user/pin/create'] = array(
    'title' => 'Create user from PIN',
    'page callback' => 'pinserver_authenticate_user_create',
    'access callback' => 'pinserver_authenticate_user_login_access',
    'file' => 'pinserver_authenticate.pages.inc',
  );

  return $items;
}

/**
 * Redirect user to /user if they are already logged in
 * and they have already filled out the required new user form
 * @return bool
 */
function pinserver_authenticate_user_login_access() {
  if (user_is_logged_in()) {
    return false;
  }

  return true;
}

function pinserver_authenticate_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  if ($root_path == 'user') {
    $tabs = &$data['tabs'][0]['output'];
    foreach ($tabs as $k => $t) {
      if ($t['#link']['path'] == 'user/pin') {
        $tabs[$k]['#link']['localized_options']['query'] = drupal_get_destination();
        $tabs[$k]['#link']['access'] = !pinserver_get_user_huid();
      }
    }
  }
}

function pinserver_authenticate_get_uid_from_huid($huid = NULL) {
  if (!$huid){
    $huid = pinserver_get_user_huid();
  }

  if ($huid) {
    return db_select('pinserver_users', 'pu')
      ->fields('pu', array('uid'))
      ->condition('huid', $huid)
      ->execute()
      ->fetchField();
  }

  return FALSE;
}

function pinserver_authenticate_set_user_huid($uid, $huid) {
  try {
    db_insert('pinserver_users')
      ->fields(array(
        'huid' => $huid,
        'uid' => $uid
      ))
      ->execute();
    return true;
  }
  catch (Exception $e) {
    return false;
  }
}

/**
 * Associates a PIN with a user
 */
function pinserver_authenticate_user_login(&$user) {
  drupal_set_message('logging in user');
  if ($huid = pinserver_get_user_huid()) {
    drupal_set_message('their PIN is '.$huid);
    if (!pinserver_authenticate_get_uid_from_huid($huid)) {
      drupal_set_message('No one with this PIN registered. Adding them to system.');
      pinserver_authenticate_set_user_huid($user['uid'], $huid);
    }
  }
}