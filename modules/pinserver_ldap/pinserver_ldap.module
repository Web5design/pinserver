<?php

/**
 * @file
 * Integrates Harvard PIN LDAP attributes with pinserver module.
 */

/**
 * Gets name and email from ldap for given HUID.
 *
 * @param int $huid
 *   A given user's Harvard HUID.
 *
 * @throws Exception
 *
 * @return array $info
 *   An indexed array containing:
 *   - success: TRUE only if there were no errors connecting/binding/querying
 *   the LDAP server.
 *   - errors: An array containing any (string) error messages encountered.
 *   - entries: An indexed array with keys equal to LDAP attribute names,
 *   and values as arrays containing any value(s) found from the search.
 */
function pinserver_ldap_attributes_from_huid($huid) {
  $info = array(
    'success' => FALSE,
  );
  $url = variable_get('pinserver_ldap_url', '');
  $username = variable_get('pinserver_ldap_username', '');
  $password = variable_get('pinserver_ldap_password', '');

  #error_log("Host: " . $_SERVER['HTTP_HOST']);
  #error_log("Getting ldap info from " . $url);

  ldap_set_option(NULL, LDAP_OPT_DEBUG_LEVEL, 7);
  $ds = ldap_connect($url);
  if (!$ds) {
    $info['errors'][] = t("Couldn't connect to LDAP.");
    return $info;
  }

  ldap_set_option($ds, LDAP_OPT_PROTOCOL_VERSION, 3);
  ldap_set_option($ds, LDAP_OPT_REFERRALS, 0); 
  $db = ldap_bind($ds, $username, $password);
  if (!$db) {
    $info['errors'][] = t("Couldn't bind to LDAP.");
    return $info;
  }

  $search_dn = "ou=people, o=Harvard University Core, dc=huid, dc=harvard, dc=edu";
  $search_filter = "(&(harvardeduidnumber=" . $huid . "))";
  $sr = ldap_search($ds, $search_dn, $search_filter);
  if ($sr === FALSE) {
    $info['errors'][] = t('An error occurred while attempting to search LDAP.');
    return $info;
  }
  $info['success'] = TRUE;

  #echo "\nSearch result is " . $sr . "<br />";
  #echo "\nNumber of entries returned is " . ldap_count_entries($ds, $sr) . "<br />";

  $entries = ldap_get_entries($ds, $sr);
  $info['entries'] = $entries;

  #echo "\nData for " . $info["count"] . " items returned:<p>";
  #var_dump($info);

  return $info;
}

/**
 * Creates an attractive drupal username based on LDAP information.
 */
function generate_username($ldap_info) {
  return $ldap_info['first'] . ' ' . $ldap_info['last'];
}
